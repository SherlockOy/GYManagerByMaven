<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="  
     http://www.springframework.org/schema/beans   
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
     http://www.springframework.org/schema/tx   
     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
     http://www.springframework.org/schema/aop   
     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
     http://www.springframework.org/schema/context  
     http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- 读取jdbc.properties配置文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>
	<bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	<!-- 创建sessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingResources">
			<list>
				<value>com/sherlockoy/po/User.hbm.xml</value>
				<value>com/sherlockoy/po/Field.hbm.xml</value>
				<value>com/sherlockoy/po/Order.hbm.xml</value>
			</list>
		</property>
		<property name="packagesToScan">
			<list>
				<!-- 需要映射的实体类,指定到实体类所在的包即可 -->
				<value>com.sherlockoy.po</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="current_session_context_class">thread</prop>
				<prop key="connection.pool_size">3</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext
				</prop>
			</props>
		</property>
	</bean>
	<!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean 
		below) -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<!-- the transactional semantics... -->
		<tx:attributes>
			<!-- all methods starting with 'get' are read-only -->
			<tx:method name="get*" read-only="true" />
			<!-- other methods use the default transaction settings (see below) -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<!-- ensure that the above transactional advice runs for any execution of 
		an operation defined by the FooService interface -->
	<aop:config>
		<aop:pointcut id="ServiceMethods"
			expression="execution(* com.sherlockoy.service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="ServiceMethods" />
	</aop:config>
	<!-- 开启事务管理 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>






	<!-- 以下为映射关系 -->
	<bean id="userDAO" class="com.sherlockoy.dao.imp.UserDAO">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="userService" class="com.sherlockoy.service.imp.UserService">
		<property name="userDAO" ref="userDAO" />
	</bean>

	<bean id="fieldDAO" class="com.sherlockoy.dao.imp.FieldDAO">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="fieldService" class="com.sherlockoy.service.imp.FieldService">
		<property name="fieldDAO" ref="fieldDAO" />
	</bean>
	
	<bean id="orderDAO" class="com.sherlockoy.dao.imp.OrderDAO">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="orderService" class="com.sherlockoy.service.imp.OrderService">
		<property name="orderDAO" ref="orderDAO" />
		<property name="fieldDAO" ref="fieldDAO" />
	</bean>

	<!-- <bean id="registerAction" class="com.sherlockoy.action.RegisterAction" 
		scope="prototype"> <property name="userService" ref="userService" /> </bean> -->
	<bean id="personDao" class="com.sherlockoy.dao.imp.PersonDao"></bean>

	<bean id="personService" class="com.sherlockoy.service.imp.PersonService">
		<property name="personDao" ref="personDao"></property>
	</bean>

</beans>  